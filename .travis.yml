language: c
  
matrix:
  include:
    - name: "OSX - GCC"
      os: osx
      compiler: gcc
    - name: "OSX - CLANG"
      os: osx
      compiler: clang
    - name: "Linux - GCC"
      os: linux
      dist: trusty
      sudo: yes
      compiler: gcc
    - name: "Linux - CLANG"
      os: linux
      dist: trusty
      sudo: yes
      compiler: clang
    - name: "Windows - GCC"
      os: windows
      compiler: gcc
    - name: "Windows - CLANG"
      os: windows
      compiler: clang

before_install:
  # Install Python on Windows
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then choco install -y python; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then cmd.exe /c "call RefreshEnv.cmd"; fi
  # Export PATH on OSX and Linux
  # TODO: Do we need this part?
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then export PATH="$(pwd)/build:${PATH}"; fi
  # Download Ninja from GitHub
  - git clone https://github.com/ninja-build/ninja
  # Build Ninja on Windows
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then py ninja/configure.py --bootstrap; fi
  # Build Ninja on OSX and Linux
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then ./ninja/configure.py --bootstrap; fi
  # Download Meson both systems
  - git clone https://github.com/mesonbuild/meson
  
# Build scripts
# The same on all platforms
script:
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then py meson/meson.py builddir; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then ./meson/meson.py builddir; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then ninja/ninja.exe -C builddir; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then ./ninja/ninja -C builddir; fi
  - ls builddir

test_script:
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then ninja/ninja.exe -C builddir test; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then ./ninja/ninja -C builddir test; fi
